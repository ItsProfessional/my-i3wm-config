set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
# ITSPROFESSIONAL: This command is weird, it doesn't always work. What I mean is that some applications will start while others wont sometimes. I'm too lazy to figure out how to fix it so I'll just comment this out so that I can manually add the applications at the bottom of the file (search for "AUTOSTARTS"
#exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use brightnessctl to adjust brightness.
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%-


# Use Mouse+$mod to drag floating windows to their wanted position (basically alt+drag)
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop



# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right


# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


# split in horizontal orientation
bindsym $mod+n split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:Terminal"
set $ws2 "2:Web"
set $ws3 "3:Discord"
set $ws4 "4:Programming"
set $ws5 "5:Games"
set $ws6 "6:Music"
set $ws7 "7:VMs"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10


# reload the configuration file
bindsym $mod+r reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
#bindsym Mod1+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Ctrl+e exit

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize grow width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize shrink width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize grow width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize shrink width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+c mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}




# For logging out, shutting down, rebooting etc
set $Locker i3lock && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+p mode "$mode_system"


# go back to previous workspace. if pressed again, it'll go back to the workspace on which you executed this
bindsym $mod+Tab workspace back_and_forth


# Focus previously focused window
#bindsym $mod+semicolon [con_mark=_last] focus
bindsym $mod+semicolon [con_mark=_back] focus




# this makes it so that when you press $mod+x it'll switch to the latest urgent window. This is useful because opening links from a different workspace than firefox opens it in firefox, but does not switch to that workspace. Now I can press mod+x to switch to it. I used to have a autoswitch to urgent windows command but that was unreliable for some reason (It's commented out somewhere below)
bindsym $mod+x [urgent=latest] focus







# Use theme. To use this: install xsettingsd, then log into a desktop environment (for me its cinnamon) and run this: `dump_xsettings >~/.xsettingsd`. After that, boot back into i3 and if you added this line to your config, it'll use your actual theme correctly
exec_always --no-startup-id /usr/bin/xsettingsd

# Wallpaper
exec_always --no-startup-id /usr/bin/feh --bg-scale '/usr/share/backgrounds/mywallpapers/Sunrise.png'


# Composite manager`
exec --no-startup-id picom


# Disable pointer acceleration for all devices
#exec_always for id in $(xinput list | grep "pointer" | cut -d '=' -f 2 | cut -f 1); do xinput --set-prop $id 'libinput Accel Profile Enabled' 0, 1; done
# I have now switched to using /etc/X11/xorg.conf.d/50-mouse-acceleration.conf for disabling pointer acceleration instead of using xinput. This is the config: https://wiki.archlinux.org/title/Mouse_acceleration#with_libinput

# Fix key delay and repeat rate
exec --no-startup-id xset r rate 300 25 


# helper script needed for focusing last window (and also my "disable fullscreen when new window launched" code)
#exec --no-startup-id ~/.local/bin/i3-focus-last-window.sh

# Start the daemon which listens to focus changes and sets _back mark
exec --no-startup-id /usr/bin/i3-back




# the following two commands will make it so that fullscreen mode will be disabled if it is enabled when a new window is launched (e.g. mod+enter). I need to delay it a bit because otherwise it'll start focusing on startup applications when system starts
#for_window [all] [con_mark=_last] focus; fullscreen disable; exec i3-msg '[con_mark=_last] focus'
# note: the line below is needed to get the line above work with best experience, however it has a side-effect where new windows will be focused. I actually like this behaviour so I'll leave it as-is
#for_window [all] focus

for_window [all] focus; fullscreen disable; focus



# Automatically focus windows once they becomes urgent. This means, if you open a link then it will switch the workspace instead of just making the icon red. https://unix.stackexchange.com/questions/714427/i3wm-how-to-automatically-switch-workspace-when-a-window-of-a-specific-applicat
# EDIT: It doesn't work sometimes, and is unreliable unfortunately
focus_on_window_activation focus



# AUTOSTARTS
# autokey
exec autokey-gtk

# silently start steam: https://www.reddit.com/r/Steam/comments/dbohal/how_can_i_start_up_steam_minimized/
exec steam -nochatui -nofriendsui -silent

# diodon clipboard manager
exec diodon

# flameshot for screenshots
exec /usr/bin/flameshot

# GreenTunnel is a program that bypasses DPI website blocking by ISPs, I mainly use it for unblocking the github content cdn a.k.a raw.github.usercontent.com which the government of [redacted] blocked in about 2023 Jan-Feb for some odd reason. GitHub: https://github.com/SadeghHayeri/GreenTunnel
# EDIT: I replaced green-tunnel with spoof-dpi, because sometimes green-tunnel doesn't run on startup and has weird issues in general.
# EDIT 2: I've disabled it completely, it just caused more issues than it actually solved
#exec green-tunnel
#exec --no-startup-id "sleep 5; spoof-dpi"
#exec spoof-dpi

# Wheel scroll speed fix. https://askubuntu.com/questions/255890/how-can-i-adjust-the-mouse-scroll-speed
exec imwheel

# Disable the middle mouse button paste in Xorg. GitHub: https://github.com/milaq/XMousePasteBlock
exec xmousepasteblock

# This is an alternative to xmousepasteblock, as that program stops working after a while for some reason, atleast in discord.
# To get this one to work, install sxhkd and xsel and configure ~/.config/sxhkd/sxhkdrc like this: https://unix.stackexchange.com/a/472464 (OR https://unix.stackexchange.com/questions/24330/how-can-i-turn-off-middle-mouse-button-paste-functionality-in-all-programs)
# I have both sxhkd and xmousepasteblock running to ensure that middle mouse pasting is completely disabled
exec sxhkd


# This is something that came with cinnamon and appearently is needed for correctly displayign tray icons according to a system report in the system reports application. ORIGINAL DESCRIPTION IN THE STARTUP APPLICATIONS ENTRY: A service that provides the org.kde.StatusNotifierWatcher interface for XApps
# EDIT: This did not get rid of the system report that complained that it is not beign used, I'll keep this here for onw though as I don't think it's doing anything bad
exec /usr/libexec/xapps/sn-watcher/xapp-sn-watcher



# screenshot and clipboard manager shortcuts
bindsym $mod+p exec --no-startup-id /usr/bin/flameshot gui
bindsym $mod+u exec --no-startup-id /usr/bin/diodon



# AUTOSTARTS (FOR APPLICATIONS)
# I have to keep a 2 second delay for spotify because otherwise it just crashes on startup sometimes
exec --no-startup-id "sleep 2; spotify"
exec --no-startup-id firefox
exec --no-startup-id codium
exec --no-startup-id discord --enable-blink-features=MiddleClickAutoscroll

# Launch two terminals, on the first workspace
exec --no-startup-id i3-msg 'workspace 1:Terminal; exec i3-sensible-terminal'
exec --no-startup-id i3-msg 'workspace 1:Terminal; exec i3-sensible-terminal'


#assign      [class="Gnome-terminal"]  $ws1
assign      [class="firefox"]                  $ws2
assign      [class="discord"]                  $ws3
assign      [class="VSCodium"]                 $ws4
assign      [class="PollyMC"]                  $ws5
assign      [class="Minecraft"]                $ws5
assign      [class="VirtualBox Manager"]       $ws7
assign      [class="VirtualBox Machine"]       $ws7
for_window  [class="steam_app_"]               move to workspace $ws5
for_window  [class="Spotify"]                  move to workspace $ws6


# These commands will remove the urgency status on startup applications. I have this poorly written code because not all applications start at the same time
exec --no-startup-id "sleep 1; for win in $(wmctrl -l | awk -F' ' '{print $1}'); do wmctrl -i -r $win -b remove,demands_attention; done"
exec --no-startup-id "sleep 1.5; for win in $(wmctrl -l | awk -F' ' '{print $1}'); do wmctrl -i -r $win -b remove,demands_attention; done"
exec --no-startup-id "sleep 2; for win in $(wmctrl -l | awk -F' ' '{print $1}'); do wmctrl -i -r $win -b remove,demands_attention; done"
exec --no-startup-id "sleep 2.5; for win in $(wmctrl -l | awk -F' ' '{print $1}'); do wmctrl -i -r $win -b remove,demands_attention; done"
exec --no-startup-id "sleep 3; for win in $(wmctrl -l | awk -F' ' '{print $1}'); do wmctrl -i -r $win -b remove,demands_attention; done"
exec --no-startup-id "sleep 3.5; for win in $(wmctrl -l | awk -F' ' '{print $1}'); do wmctrl -i -r $win -b remove,demands_attention; done"



# Focus the left terminal that opens (we open two terminals, which are assigned to workspace 1). I have a 0.6 second delay because we need to wait until the terminals have opened
exec --no-startup-id "sleep 0.6; i3-msg focus left"




# swap capslock with escape. edit: scrap that, now I replace capslock with escape but map shift+capslock to the original capslock functionality
# I tried putting this in ~/.xinitrc but it doesn't work for some reason
#exec --no-startup-id setxkbmap -option "caps:swapescape"
exec --no-startup-id setxkbmap -option "caps:escape_shifted_capslock"



# colors
# class                 border  backgr. text    indicator child_border
client.focused          #1e1e1e #2c4685 #ffffff #2e9ef4   #285577
client.focused_inactive #1e1e1e #1e1e1e #ffffff #484e50   #5f676a
client.unfocused        #1e1e1e #1e1e1e #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff


